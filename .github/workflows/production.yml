name: Deploy (Production)

on:
  push:
    branches:
      - main

jobs:
  build-and-release-pypi:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install

      - name: Python Semantic Release
        id: semantic_release
        uses: python-semantic-release/python-semantic-release@v8.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          root_options: -vv

      - name: Publish to Test PyPI
        if: success() && steps.semantic_release.outputs.released == 'true'
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi ${{ secrets.TEST_PYPI_TOKEN }}
          poetry publish -r test-pypi $PYPI_TOKEN

      - name: Publish to PyPI
        if: success() && steps.semantic_release.outputs.released == 'true'
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish
