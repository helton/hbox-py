name: Deploy (Production)

on:
  push:
    branches:
      - main

jobs:
  build-and-release-pypi:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install

      - name: Python Semantic Release
        id: semantic_release
        uses: python-semantic-release/python-semantic-release@v8.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get release version
        id: get_version
        if: success() && steps.semantic_release.outputs.released == 'true'
        run: echo "version=$(poetry version -s)" >> $GITHUB_OUTPUT

      - name: Upload release assets
        if: success() && steps.semantic_release.outputs.released == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          files: |
            ./dist/hbox-${{ steps.get_version.outputs.version }}.tar.gz
            ./dist/hbox-${{ steps.get_version.outputs.version }}-py3-none-any.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Test PyPI
        if: success() && steps.semantic_release.outputs.released == 'true'
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi ${{ secrets.TEST_PYPI_TOKEN }}
          poetry publish -r test-pypi $PYPI_TOKEN

      - name: Publish to PyPI
        if: success() && steps.semantic_release.outputs.released == 'true'
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry publish

      - name: Merge back to develop
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git checkout develop
          git merge main
          git push
