name: Deploy (Production)

on:
  push:
    branches:
      - main

jobs:
  build-and-release-pypi:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: poetry install

      - name: Build and publish to PyPI
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          poetry build
          poetry publish

  publish-release-github:
    permissions:
      contents: write
    needs: [build-and-release-pypi]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: poetry install

      - name: Build
        run: |
          poetry build

      - name: Get version from pyproject.toml
        id: get_version
        run: |
          echo "::set-output name=version::$(poetry version -s)"

      - name: Set up environment variables for release
        run: echo "RELEASE_VERSION=${{ steps.get_version.outputs.version }}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/hbox-${{ steps.get_version.outputs.version }}.tar.gz
          asset_name: hbox-${{ steps.get_version.outputs.version }}.tar.gz
          asset_content_type: application/gzip

      - name: Update Release Description
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          files: ./dist/hbox-${{ steps.get_version.outputs.version }}.tar.gz
          body: |
            âœ¨ Version v${{ steps.get_version.outputs.version }} released.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
